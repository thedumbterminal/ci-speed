"""support users sharing projects

Revision ID: 49901dacf799
Revises: 31f8ec031c8f
Create Date: 2023-05-01 09:41:31.312557

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "49901dacf799"
down_revision = "31f8ec031c8f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_projects",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.UniqueConstraint("user_id", "project_id", name="uniq_user_project"),
    )

    sql = sa.text(
        (
            "insert into users_projects (project_id, user_id)"
            "select project.id as project_id, user_id from project"
        )
    )
    op.execute(sql)

    with op.batch_alter_table("project", schema=None) as batch_op:
        batch_op.drop_constraint("uniq_user_id_project", type_="unique")
        batch_op.create_unique_constraint("uniq_name", ["name"])
        batch_op.drop_constraint("project_user_id_fkey", type_="foreignkey")
        batch_op.drop_column("user_id")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("project", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False)
        )
        batch_op.create_foreign_key("project_user_id_fkey", "user", ["user_id"], ["id"])
        batch_op.drop_constraint("uniq_name", type_="unique")
        batch_op.create_unique_constraint("uniq_user_id_project", ["user_id", "name"])

    op.drop_table("users_projects")
    # ### end Alembic commands ###
